version: '3.7'

services:
  db:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2019-CU13-ubuntu-20.04
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_DATA_DIR: /var/opt/sqlserver/data
      MSSQL_LOG_DIR: /var/opt/sqlserver/log
      MSSQL_BACKUP_DIR: /var/opt/sqlserver/backup
      MSSQL_SA_PASSWORD: Passw0rd1
    volumes:
      - sqlsystem:/var/opt/mssql/
      - sqldata:/var/opt/sqlserver/data
      - sqllog:/var/opt/sqlserver/log
      - sqlbackup:/var/opt/sqlserver/backup
    networks:
      - app-network
  cltp-backend-proxy:
    container_name: cltp-backend-proxy
    image: cltp-backend-proxy:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      ENDPOINT: https://cltp.ll
      PORT: 8080
      MSSQL_ENDPOINT: db
      MSSQL_PORT: 1433
      MSSQL_DATABASE: test0
      FRONTEND_ENDPOINT: https://cltp.ll
      FRONTEND_PORT: 80
      SERVICE_PASSWORD: cltp
    networks:
      - app-network
    depends_on:
      - db
  cltp-php-backend:
    container_name: cltp-php-backend
    image: cltp-php-backend:latest
    build:
      context: ./php-backend
      dockerfile: Dockerfile
    # Uncomment this for php backend
    ports:
      # - "80:80"
      - "8082:80"
    networks:
      - app-network
    depends_on:
      - db
  cltp-frontend:
    container_name: cltp-frontend
    image: cltp-frontend:latest
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    # # Uncomment this for node backend
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - cltp-backend-proxy
    volumes:
      - ./proxy/certs:/etc/nginx/certs
networks:
  app-network:
    driver: bridge
volumes:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup:

version: '3.7'

services:
  db:
    container_name: db
    image: postgres:13
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: live
    networks:
      - app-network
    # ports:
    #   - "5432:5432"
    restart: unless-stopped
    volumes:
      - /var/lib/postgres/testdb:/var/lib/postgresql/data
  cltp-backend-proxy:
    container_name: cltp-backend-proxy
    image: cltp-backend-proxy:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      ENDPOINT: https://cltp.ll
      PORT: 8080
      POSTGRES_ENDPOINT: db
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: test2
      FRONTEND_ENDPOINT: https://cltp.ll
      FRONTEND_PORT: 80
    networks:
      - app-network
    depends_on:
      - db
  cltp-frontend:
    container_name: cltp-frontend
    image: cltp-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - cltp-backend-proxy
    volumes:
      - ./proxy/certs:/etc/nginx/certs
  dbadmin:
    container_name: dbadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - "8082:443"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aposphere.com
      PGADMIN_DEFAULT_PASSWORD: Aposphere
      PGADMIN_ENABLE_TLS: "True"
    networks:
      - app-network
    volumes:
      - ./proxy/certs/server.crt:/certs/server.cert
      - ./proxy/certs/server.key:/certs/server.key
    #   - /var/lib/dbadmin:/var/lib/pgadmin
networks:
  app-network:
    driver: bridge
